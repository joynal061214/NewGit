package HCI.HCI;

import HCI.*;
import java.awt.Dimension;
import java.awt.*;
import javax.persistence.*;
import java.util.List;
import java.util.Vector;
import Classes.Client;
import control.ClientJpaController;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

        
//import net.proteanit.sql.DbUtils;
//import net.proteanit.sql.DbUtils;

/**
 * @author Joynal Abedin 18-Jun-2013
 */
public class SearchClientForm1 extends javax.swing.JFrame
{

    MainWindowFrame parent;
    Client clientObj;
    List list;
    List lastNameList;
    ClientJpaController control;
    int total=0;
    /**
     * Creates new form addClientForm
     */
    public SearchClientForm1()
    {
       
        setTitle("Simple Legal System                     Search a client here");
        initComponents();
        this.setIconImage(new ImageIcon("legal.gif").getImage());
        // centre the user interface on the screen
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width - getWidth()) / 2,
                (screenSize.height - getHeight()) / 2);
     

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        FNamejTextField = new javax.swing.JTextField();
        queryButton = new javax.swing.JButton();
        FNameLebel = new javax.swing.JLabel();
        LNameLabel = new javax.swing.JLabel();
        LNameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ViewClientjButton = new javax.swing.JButton();
        SetUpReviewjButton = new javax.swing.JButton();
        DeleteClientjButton = new javax.swing.JButton();
        EditClientjButton = new javax.swing.JButton();
        ClearFieldsjButton = new javax.swing.JButton();
        GoBackjButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        ExitjMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Client's Profile");

        queryButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        queryButton.setText("Query");
        queryButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                queryButtonActionPerformed(evt);
            }
        });

        FNameLebel.setText("First Name");

        LNameLabel.setText("Or        Last Name");

        jTextArea2.setColumns(2);
        jTextArea2.setRows(total);
        jScrollPane1.setViewportView(jTextArea2);

        jScrollPane2.setViewportView(jTable1);

        ViewClientjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ViewClientjButton.setText("View client details");
        ViewClientjButton.setActionCommand("");
        ViewClientjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ViewClientjButtonActionPerformed(evt);
            }
        });

        SetUpReviewjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SetUpReviewjButton.setText("Setup a review");

        DeleteClientjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DeleteClientjButton.setText("Delete this client");

        EditClientjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        EditClientjButton.setText("Edit this client");

        ClearFieldsjButton.setText("Clear fields");
        ClearFieldsjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ClearFieldsjButtonActionPerformed(evt);
            }
        });

        GoBackjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GoBackjButton.setText("BackTo Main Window");
        GoBackjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                GoBackjButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        ExitjMenuItem.setText("Exit");
        ExitjMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ExitjMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(ExitjMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(FNameLebel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(ClearFieldsjButton)
                .addGap(18, 18, 18)
                .addComponent(queryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditClientjButton)
                    .addComponent(DeleteClientjButton)
                    .addComponent(SetUpReviewjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ViewClientjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GoBackjButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DeleteClientjButton, EditClientjButton, GoBackjButton, SetUpReviewjButton, ViewClientjButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClearFieldsjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FNameLebel)
                        .addComponent(LNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(LNameLabel)
                        .addComponent(queryButton)))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditClientjButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(DeleteClientjButton)
                        .addGap(18, 18, 18)
                        .addComponent(SetUpReviewjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ViewClientjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GoBackjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(191, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {DeleteClientjButton, EditClientjButton, GoBackjButton, SetUpReviewjButton, ViewClientjButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queryButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_queryButtonActionPerformed
    {//GEN-HEADEREND:event_queryButtonActionPerformed
        // TODO add your handling code here:

        EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                "slSystemPU");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();

     //   list = em.createQuery("select c from Client c order by c.firstName").getResultList(); //only this one works
     //   list = em.createQuery("select c from Client c").getResultList();
    //  list = em.createNamedQuery("SELECT c FROM Client c WHERE c.firstName LIKE :firstName").getResultList();
        //  list = em.createNamedQuery("Client.findByFirstName").getResultList();

        /* String name = FNamejTextField.getText();
         Client searchAclient = new Client();
         Client clientOb[] = new Client[clientList.size()];
         boolean result = false;
            
         int NoOfClientsFound=0;
            
         for(int i=0; i<clientList.size();i++){
         searchAclient = (Client) clientList.get(i);
         if(name == searchAclient.getFirstName()){
         result = true;
         clientOb[NoOfClientsFound++]= searchAclient;
                    
         jTextArea2.setText(name);
         System.out.println(name);
         }
       }
         */
        
        lastNameList = em.createQuery("SELECT c FROM Client c WHERE c.lastName LIKE :lastName").setParameter(
         "lastName", LNameTextField.getText()).getResultList();
      list =em.createQuery("SELECT c FROM Client c WHERE c.firstName LIKE :firstName")
     .setParameter("firstName", FNamejTextField.getText()).getResultList();
      if (list.size()>0 || lastNameList.size()>0){
           JOptionPane.showMessageDialog(null,+list.size()+ ": Customer is found");
      }
      else{
            JOptionPane.showMessageDialog(null, "Customer not found");
      }
          
     
       int count=0;
       String str = "";
       String here=" ";
       boolean find = false;
    //   Object[][] data
       
    for(Object c : list){
        Client loadCl = (Client) c;
      String name = FNamejTextField.getText().trim();
      String aName =loadCl.getFirstName();
    
        System.out.println(loadCl.getFirstName());
      if(name.equalsIgnoreCase(aName)){
          
         

            str = str +loadCl.getFirstName().toUpperCase()+"  "+loadCl.getLastName()
             .toUpperCase()+"  ID:"+loadCl.getClientId()+"\n";
            
         
            
            
          System.out.println(findwithName(name+"hello for findwithname"));
      jTextArea2.setText(str);
      
    jLabel3.setText("Total Names found is: " + list.size() + "  "
                     + "This client reference Id is: " + loadCl.getClientId());
    
          displayTable(list);
          displayTable(lastNameList);
    
    
           //  here = here+loadCl.getFirstName()+"\n";
          
//       String[] colHeads = {"First Name", "Last Name"};
//       int cols = 2;
//       int rows = list.size();
//        for (int i = 0; i < cols; i ++ ) {
//    for (int j = 0; j < rows; j ++ ) {
//     
//   
//        
//           Object[][] data = {{j+loadCl.getFirstName().toUpperCase(), loadCl.getLastName().toUpperCase()},
//             //   {here+j}
//              //  {"2nd row","2nd & col2"}
//            };
//                    
//            TableModel model = new DefaultTableModel(data, colHeads);
//            jTable1.setModel(model);  
//            
//            }
//        }
       }
      
    }
     
           
   /*   
      
      
        String name = FNamejTextField.getText().trim();
        String lname = LNameTextField.getText().trim();
       
        for (int i = 0; i < list.size(); i++)
        {
            Object c = list.get(i);
            Client loadCl = (Client) c;
            //    loadCl = (Client)clientList.get(i);
                    
             jLabel3.setText("Total Names found is: " + list.size() + "  "
                     + "This client reference Id is: " + loadCl.getClientId());
            
          //    JTextField field = new JTextField(list.size());
          //  JTextArea area = new JTextArea(list.size(), 2);
               
             
            if(loadCl.getFirstName().equalsIgnoreCase(name))  {
            name = loadCl.getFirstName();
            total++;
             jTextArea2.setText(
                    name + " " + lname);
               
       //    jTextArea2.setRows(list.size());
            }
                else
            {
                loadCl.getLastName().equalsIgnoreCase(lname);
                   lname = loadCl.getLastName();
                    jTextArea2.setText(
                    name + " " + lname);
                            
            
            } 
            
           

            System.out.println(" here is the lsit " + loadCl.getFirstName()+i);
            System.out.println(name+" "+lname);
          //  jTextArea2.setText("Joyda" +loadCl.getFirstName()+ " " + loadCl.getLastName());
     
         // displayTable(list);
            /* To display data in a table  */
      
          
        em.getTransaction().commit();
        em.close();

    }//GEN-LAST:event_queryButtonActionPerformed
    /*
     TableModel tm = new AbstractTableModel() {
    
     private static final long serialVersionUID = 1L;
     String[][] data = { {"This", "is"}, {"a", "Test"} };
     String[] headers = {"Column", "Header"};
     public int getRowCount() { return data.length; }
     public int getColumnCount() { return headers.length; }
     public Object getValueAt(int r, int c) { return data[r][c]; }
     public String getColumnName(int c) { return headers[c]; }
     };
     JTable jt = new JTable(tm);
     JScrollPane jsp = new JScrollPane(jt);
     //getContentPane().add(jsp, BorderLayout.CENTER);
	*/    
    
    public List findwithName(String name){
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                "slSystemPU");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();
        
        return em.createQuery("SELECT c FROM Client c WHERE c.firstName LIKE :firstName")
        .setParameter("firstName", name)
        .getResultList();
               
                
            //  em.getTransaction().commit();
      //  em.close();
    }
    

    private void displayTable(List resultList){
     
    Vector<String> tableHeaders = new Vector<String>();
    Vector tableData = new Vector();
    tableHeaders.add("Client Id"); 
    tableHeaders.add("First Name");
    tableHeaders.add("Last Name");
    tableHeaders.add("Folder ID");

    for(Object o : resultList) {
        Client actor = (Client)o;
        Vector<Object> oneRow = new Vector<Object>();
        oneRow.add(actor.getClientId());
        oneRow.add(actor.getFirstName());
        oneRow.add(actor.getLastName());
    
        tableData.add(oneRow);
    }
       TableModel model = new DefaultTableModel(tableData,tableHeaders);
       jTable1.setModel(model);
    
        
    }
    
    
    private void ViewClientjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ViewClientjButtonActionPerformed
    {//GEN-HEADEREND:event_ViewClientjButtonActionPerformed
        // TODO add your handling code here:
          /*
          em.find(Client.class, name); //need to try this code
        
        if (emp != null) { // a client object should be checked for null first
        em.remove(emp);
       }*/
                 
    }//GEN-LAST:event_ViewClientjButtonActionPerformed

    private void ClearFieldsjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ClearFieldsjButtonActionPerformed
    {//GEN-HEADEREND:event_ClearFieldsjButtonActionPerformed
        // TODO add your handling code here:
        FNamejTextField.setText("");
        LNameTextField.setText("");
     //   PostcodejTextField.setText("");
        jTextArea2.setText("");
        jLabel3.setText("");
    }//GEN-LAST:event_ClearFieldsjButtonActionPerformed

    private void ExitjMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ExitjMenuItemActionPerformed
    {//GEN-HEADEREND:event_ExitjMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitjMenuItemActionPerformed

    private void GoBackjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_GoBackjButtonActionPerformed
    {//GEN-HEADEREND:event_GoBackjButtonActionPerformed
        // TODO add your handling code here:
        MainWindowFrame frame = new MainWindowFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_GoBackjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SearchClientForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearFieldsjButton;
    private javax.swing.JButton DeleteClientjButton;
    private javax.swing.JButton EditClientjButton;
    private javax.swing.JMenuItem ExitjMenuItem;
    private javax.swing.JLabel FNameLebel;
    private javax.swing.JTextField FNamejTextField;
    private javax.swing.JButton GoBackjButton;
    private javax.swing.JLabel LNameLabel;
    private javax.swing.JTextField LNameTextField;
    private javax.swing.JButton SetUpReviewjButton;
    private javax.swing.JButton ViewClientjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton queryButton;
    // End of variables declaration//GEN-END:variables

}
