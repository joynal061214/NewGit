package HCI;

import Classes.Reminder;
import java.awt.Dimension;
import java.awt.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import java.util.Date;
import javax.persistence.Query;
import javax.persistence.TemporalType;
//import org.eclipse.persistence.jpa.internal.jpql.parser.DateTime;


/**
 * @author Joynal Abedin 22-May-2013
 */
public class MainWindowFrame extends javax.swing.JFrame {

    //public static List resultList;
    List<Reminder> list;

    public static int IsUpdatedByAlert = 0;
    public static int ReminderAlert = 0;

    // Class for Task Scheduling
    public class MyTask1 extends TimerTask {

        public void run() {
            ReminderAlert();
        }
    }
    // End of class

    // Class for Task Scheduling
    public class MyTask2 extends TimerTask {

        public void run() {
            if (IsUpdatedByAlert == 1) {
                setUpTableData();
                IsUpdatedByAlert = 0;
            }
        }
    }
    // End of class

    public class Thread1 extends Thread {

        public void run() {
            MyTask1 mytask = new MyTask1();
            Timer timer = new Timer(true);
            timer.scheduleAtFixedRate(mytask, 0, 30 * 1000);
        }
    }

    public class Thread2 extends Thread {

        public void run() {
            MyTask2 mytask = new MyTask2();
            Timer timer = new Timer(true);
            timer.scheduleAtFixedRate(mytask, 0, 1000);
        }
    }

    public void ReminderAlert() {

        for (int i = 0; i < list.size(); i++) {
            DateFormat df = new SimpleDateFormat("yyMMddHHmm");

            String date1 = df.format(list.get(i).getReminderDtTime());
            String date2 = df.format(new Date());
            if (ReminderAlert == 0) {
                if ((Long.parseLong(date1) < Long.parseLong(date2)) || (Long.parseLong(date1) == Long.parseLong(date2))) {
                    //System.out.println(date1 + " is smallar than " + date2 + " or both are equal");
                    ReminderAlert = 1;
                    
                    ReminderAlertFrame frame = new ReminderAlertFrame(list.get(i).getClientId().getFirstName() + " " + list.get(i).getClientId().getLastName(), list.get(i).getReminderId());
                    frame.setVisible(true);
                } else {
                    //System.out.println(date1 + " is greater than " + date2);
                    System.out.println(new Date() + "No matching schedule");
                }
            }

            //lblTest.setText(new Date().toString());
        }
    }

    
    public MainWindowFrame() {
        setTitle("Simple Legal System");
        initComponents();
        this.setIconImage(new ImageIcon("legal.gif").getImage());
        // centre the user interface on the screen
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width - getWidth()) / 2,
                (screenSize.height - getHeight()) / 2);


        setUpTableData();

//
//        Thread1 thread1 = new Thread1();
//        thread1.start();
//        Thread2 thread2 = new Thread2();
//        thread2.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        FileReviewLabel = new javax.swing.JLabel();
        AddClientjButton = new javax.swing.JButton();
        SearchjButton = new javax.swing.JButton();
        ViewCLientFolderjButton = new javax.swing.JButton();
        ViewAcarePackjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ExitjButton = new javax.swing.JButton();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        OpenCarePackjMenuItem = new javax.swing.JMenuItem();
        ExitjMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        AboutjMenu = new javax.swing.JMenu();
        AboutjMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Client's Name", "ScheduleID", "About", "Next Reminder", "Last Reviewed", "Total Reviewed"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(1).setMinWidth(80);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(5).setMinWidth(100);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(100);

        FileReviewLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        FileReviewLabel.setText("File Review Reminder Schedule");

        AddClientjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddClientjButton.setText("Add A Client");
        AddClientjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                AddClientjButtonActionPerformed(evt);
            }
        });

        SearchjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SearchjButton.setText("Search A Client");
        SearchjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                SearchjButtonActionPerformed(evt);
            }
        });

        ViewCLientFolderjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ViewCLientFolderjButton.setText("View A Client Folder");
        ViewCLientFolderjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ViewCLientFolderjButtonActionPerformed(evt);
            }
        });

        ViewAcarePackjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ViewAcarePackjButton.setText("View A CarePack");
        ViewAcarePackjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ViewAcarePackjButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Simple Legal Practice System");

        ExitjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ExitjButton.setText("Exit");
        ExitjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ExitjButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        OpenCarePackjMenuItem.setText("Open CarePack");
        jMenu1.add(OpenCarePackjMenuItem);

        ExitjMenuItem.setText("Exit");
        ExitjMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ExitjMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(ExitjMenuItem);

        jMenuBarMain.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBarMain.add(jMenu2);

        jMenu3.setText("view");
        jMenuBarMain.add(jMenu3);

        jMenu4.setText("Tools");
        jMenu4.setActionCommand("");
        jMenuBarMain.add(jMenu4);

        AboutjMenu.setText("Help");

        AboutjMenuItem.setText("About");
        AboutjMenu.add(AboutjMenuItem);

        jMenuBarMain.add(AboutjMenu);

        setJMenuBar(jMenuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 288, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(300, 300, 300))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddClientjButton)
                            .addComponent(SearchjButton)
                            .addComponent(ViewCLientFolderjButton)
                            .addComponent(ViewAcarePackjButton)
                            .addComponent(ExitjButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FileReviewLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(213, 213, 213))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AddClientjButton, ExitjButton, SearchjButton, ViewAcarePackjButton, ViewCLientFolderjButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(FileReviewLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(AddClientjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ViewCLientFolderjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ViewAcarePackjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ExitjButton)
                        .addGap(80, 80, 80))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(131, 131, 131))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {AddClientjButton, ExitjButton, SearchjButton, ViewAcarePackjButton, ViewCLientFolderjButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitjMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ExitjMenuItemActionPerformed
    {//GEN-HEADEREND:event_ExitjMenuItemActionPerformed
        // TODO add your handling code here:
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        System.exit(0);
    }//GEN-LAST:event_ExitjMenuItemActionPerformed

    public void setUpTableData() {
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();

        tableModel.setRowCount(0);



        EntityManagerFactory emf = Persistence.createEntityManagerFactory("slSystemPU");
        EntityManager em = emf.createEntityManager();

        list = em.createQuery("SELECT r FROM Reminder r WHERE r.reviewed =0").getResultList();
        
        long TotReviewed;
        Date LastReview;
        Query strQry;
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

            
        for (int i = 0; i < list.size(); i++) {
            String[] data = new String[6];

            data[0] = list.get(i).getClientId().getFirstName() + " " + list.get(i).getClientId().getLastName();
            data[1] = list.get(i).getReminderId().toString();
            data[2] = list.get(i).getDescription().toString();
            data[3] = df.format(list.get(i).getReminderDtTime());
            
            strQry = em.createNativeQuery("SELECT Max(ReminderDtTime) FROM Reminder r WHERE r.client_id=" 
                    + list.get(i).getClientId().getClientId() + " and r.Reviewed=1");  
            LastReview = (Date)strQry.getSingleResult();   
            
            data[4] = String.valueOf(LastReview)==null ? "" : String.valueOf(LastReview);
            
            
            strQry = em.createNativeQuery("SELECT count(*) FROM Reminder r WHERE r.client_id=" 
                    + list.get(i).getClientId().getClientId() + " and r.Reviewed=1");  
            TotReviewed = (Long)strQry.getSingleResult();
            data[5] = String.valueOf(TotReviewed);
            
            tableModel.addRow(data);
        }
        
        em.close();
        jTable1.setModel(tableModel);

        tableModel.fireTableDataChanged();
        
    }

    private void AddClientjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_AddClientjButtonActionPerformed
    {//GEN-HEADEREND:event_AddClientjButtonActionPerformed
        // TODO add your handling code here:
        
        AddClientFrame frame = new AddClientFrame();
        frame.setVisible(true);
        this.setVisible(false);
     
                
        //this.setVisible(false);
    }//GEN-LAST:event_AddClientjButtonActionPerformed

    private void SearchjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SearchjButtonActionPerformed
    {//GEN-HEADEREND:event_SearchjButtonActionPerformed
        SearchClientForm frame = new SearchClientForm();
        frame.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_SearchjButtonActionPerformed

    private void ExitjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ExitjButtonActionPerformed
    {//GEN-HEADEREND:event_ExitjButtonActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null,
                " Are you sure you want"
                + " to close this programme? \n You will not be able to recieve a reminder!  ",
                " CONFIRMATION ", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
        if (confirm == JOptionPane.NO_OPTION) {
            this.setVisible(true);
        }
    }//GEN-LAST:event_ExitjButtonActionPerformed

    private void ViewCLientFolderjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ViewCLientFolderjButtonActionPerformed
    {//GEN-HEADEREND:event_ViewCLientFolderjButtonActionPerformed
        // TODO add your handling code here:
        EditCarePackDocsFrame frame = new EditCarePackDocsFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_ViewCLientFolderjButtonActionPerformed

    private void ViewAcarePackjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ViewAcarePackjButtonActionPerformed
    {//GEN-HEADEREND:event_ViewAcarePackjButtonActionPerformed
        // TODO add your handling code here:
        ViewCarePackFrame frame = new ViewCarePackFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_ViewAcarePackjButtonActionPerformed

    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindowFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindowFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindowFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindowFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindowFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AboutjMenu;
    private javax.swing.JMenuItem AboutjMenuItem;
    private javax.swing.JButton AddClientjButton;
    private javax.swing.JButton ExitjButton;
    private javax.swing.JMenuItem ExitjMenuItem;
    private javax.swing.JLabel FileReviewLabel;
    private javax.swing.JMenuItem OpenCarePackjMenuItem;
    private javax.swing.JButton SearchjButton;
    private javax.swing.JButton ViewAcarePackjButton;
    private javax.swing.JButton ViewCLientFolderjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
