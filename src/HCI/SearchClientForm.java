package HCI;

import java.util.Iterator;
import java.awt.Dimension;
import java.awt.*;
import javax.persistence.*;
import java.util.List;
import java.util.Vector;

import Classes.Client;
import control.exceptions.NonexistentEntityException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

//import net.proteanit.sql.DbUtils;
/**
 * @author Joynal Abedin 18-Jun-2013
 */
public class SearchClientForm extends javax.swing.JFrame
{

    MainWindowFrame parent;
    Client clientObj;
    List list;
    List lastNameList;
  //  ClientJpaController control;
    int total = 0;

    /**
     * Creates new form addClientForm
     */
    public SearchClientForm()
    {

        setTitle("Simple Legal System                     Search a client here");
        initComponents();
        this.setIconImage(new ImageIcon("legal.gif").getImage());
        // centre the user interface on the screen
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width - getWidth()) / 2,
                (screenSize.height - getHeight()) / 2);
        UpdatejButton.setEnabled(false);
        CanceljButton.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        HomeTeljTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        FNamejTextField = new javax.swing.JTextField();
        queryButton = new javax.swing.JButton();
        FNameLebel = new javax.swing.JLabel();
        LNameLabel = new javax.swing.JLabel();
        LNameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ViewClientjButton = new javax.swing.JButton();
        SetUpReviewjButton = new javax.swing.JButton();
        DeleteClientjButton = new javax.swing.JButton();
        EditClientjButton = new javax.swing.JButton();
        ClearFieldsjButton = new javax.swing.JButton();
        GoBackjButton = new javax.swing.JButton();
        ListViewButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        StreetjLabel = new javax.swing.JLabel();
        FirstNamejTextField = new javax.swing.JTextField();
        TownjTextField = new javax.swing.JTextField();
        StreetjTextField = new javax.swing.JTextField();
        CityjLabel = new javax.swing.JLabel();
        HomeTeljLabel = new javax.swing.JLabel();
        EmailjTextField = new javax.swing.JTextField();
        EmailjLabel = new javax.swing.JLabel();
        CityjTextField = new javax.swing.JTextField();
        PostCodejTextField = new javax.swing.JTextField();
        TownjLabel = new javax.swing.JLabel();
        LastNamejTextField = new javax.swing.JTextField();
        PostCodejLabel = new javax.swing.JLabel();
        MobilejLabel = new javax.swing.JLabel();
        LastNamejLabel = new javax.swing.JLabel();
        FirstNamejLabel = new javax.swing.JLabel();
        MobilejTextField = new javax.swing.JTextField();
        NojTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        findjButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        IDjTextField = new javax.swing.JTextField();
        FloderjLabel = new javax.swing.JLabel();
        FolderIDjTextField = new javax.swing.JTextField();
        UpdatejButton = new javax.swing.JButton();
        CanceljButton = new javax.swing.JButton();
        TownjTextField1 = new javax.swing.JTextField();
        PrintjButton = new javax.swing.JButton();
        SetUpReviewjButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        ExitjMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        HomeTeljTextField.setEditable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Client's Profile");

        queryButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        queryButton.setText("Query");
        queryButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                queryButtonActionPerformed(evt);
            }
        });

        FNameLebel.setText("First Name");

        LNameLabel.setText("Or        Last Name");

        jTextArea2.setColumns(2);
        jTextArea2.setRows(total);
        jScrollPane1.setViewportView(jTextArea2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jScrollPane2.setViewportView(jTable1);

        ViewClientjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ViewClientjButton.setText("View client details");
        ViewClientjButton.setActionCommand("");
        ViewClientjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ViewClientjButtonActionPerformed(evt);
            }
        });

        SetUpReviewjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SetUpReviewjButton.setText("Setup a review");
        SetUpReviewjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                SetUpReviewjButtonActionPerformed(evt);
            }
        });

        DeleteClientjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DeleteClientjButton.setText("Delete this client");
        DeleteClientjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DeleteClientjButtonActionPerformed(evt);
            }
        });

        EditClientjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        EditClientjButton.setText("Edit this client");
        EditClientjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                EditClientjButtonActionPerformed(evt);
            }
        });

        ClearFieldsjButton.setText("Clear fields");
        ClearFieldsjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ClearFieldsjButtonActionPerformed(evt);
            }
        });

        GoBackjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GoBackjButton.setText("BackTo Main Window");
        GoBackjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                GoBackjButtonActionPerformed(evt);
            }
        });

        ListViewButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ListViewButton.setText("View all clients");
        ListViewButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ListViewButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit, Delete or view  a client here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 153, 153))); // NOI18N

        StreetjLabel.setText("Street");

        FirstNamejTextField.setEditable(false);
        FirstNamejTextField.setToolTipText("Enter a first name");
        FirstNamejTextField.setName("FirstName"); // NOI18N
        FirstNamejTextField.setPreferredSize(new java.awt.Dimension(100, 20));

        TownjTextField.setEditable(false);

        StreetjTextField.setEditable(false);

        CityjLabel.setText("City");

        HomeTeljLabel.setText("Home Tel");

        EmailjTextField.setEditable(false);

        EmailjLabel.setText("Email");

        CityjTextField.setEditable(false);

        PostCodejTextField.setEditable(false);

        TownjLabel.setText("Town");

        LastNamejTextField.setEditable(false);

        PostCodejLabel.setText("Post Code");

        MobilejLabel.setText("Mobile");

        LastNamejLabel.setText("Last Name");

        FirstNamejLabel.setText("First Name");

        MobilejTextField.setEditable(false);

        NojTextField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                NojTextField_focusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Enter a client number to view full details, edit or delete");

        findjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        findjButton.setText("Find");
        findjButton.setActionCommand("");
        findjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                findjButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Client ID");

        IDjTextField.setEditable(false);

        FloderjLabel.setText("Folder ID");

        FolderIDjTextField.setEditable(false);

        UpdatejButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UpdatejButton.setText("Update details");
        UpdatejButton.setActionCommand("");
        UpdatejButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                UpdatejButtonActionPerformed(evt);
            }
        });

        CanceljButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CanceljButton.setText("Cancel");
        CanceljButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CanceljButtonActionPerformed(evt);
            }
        });

        TownjTextField1.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel2)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(NojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(findjButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HomeTeljLabel)
                    .addComponent(jLabel4)
                    .addComponent(TownjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IDjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TownjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TownjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstNamejLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CityjLabel)
                            .addComponent(EmailjLabel))
                        .addGap(15, 15, 15)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(CityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(LastNamejLabel)
                                .addGap(19, 19, 19))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(FloderjLabel)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LastNamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(PostCodejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(FolderIDjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MobilejLabel)
                            .addComponent(StreetjLabel)))
                    .addComponent(PostCodejLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StreetjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(MobilejTextField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CanceljButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UpdatejButton)
                .addGap(59, 59, 59))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {FolderIDjTextField, LastNamejTextField, PostCodejTextField});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {IDjTextField, TownjTextField, TownjTextField1});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CityjTextField, EmailjTextField, FirstNamejTextField});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(findjButton))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstNamejTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(FirstNamejLabel)
                                .addComponent(IDjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MobilejLabel)
                            .addComponent(PostCodejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PostCodejLabel)
                            .addComponent(CityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CityjLabel)
                            .addComponent(TownjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TownjLabel))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailjLabel)
                            .addComponent(EmailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HomeTeljLabel)
                            .addComponent(FloderjLabel)
                            .addComponent(FolderIDjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TownjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(StreetjLabel)
                                .addComponent(StreetjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LastNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LastNamejLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MobilejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdatejButton)
                    .addComponent(CanceljButton))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CityjTextField, EmailjTextField, FirstNamejTextField, IDjTextField, LastNamejTextField, MobilejTextField, PostCodejTextField, StreetjTextField, TownjTextField});

        PrintjButton.setText("Print this client details");
        PrintjButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PrintjButtonActionPerformed(evt);
            }
        });

        SetUpReviewjButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SetUpReviewjButton1.setText("Add a document");
        SetUpReviewjButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                SetUpReviewjButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        ExitjMenuItem.setText("Exit");
        ExitjMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ExitjMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(ExitjMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SetUpReviewjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(GoBackjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ListViewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SetUpReviewjButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))))
            .addGroup(layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(FNameLebel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(LNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(ClearFieldsjButton)
                                .addGap(18, 18, 18)
                                .addComponent(queryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(DeleteClientjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(62, 62, 62)
                                .addComponent(EditClientjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(54, 54, 54)
                                .addComponent(ViewClientjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addGap(37, 37, 37)
                                .addComponent(PrintjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DeleteClientjButton, EditClientjButton, GoBackjButton, SetUpReviewjButton, ViewClientjButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FNameLebel)
                    .addComponent(LNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LNameLabel)
                    .addComponent(queryButton)
                    .addComponent(ClearFieldsjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(SetUpReviewjButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SetUpReviewjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ListViewButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GoBackjButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(62, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DeleteClientjButton)
                            .addComponent(EditClientjButton)
                            .addComponent(ViewClientjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PrintjButton))
                        .addGap(29, 29, 29))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {DeleteClientjButton, EditClientjButton, GoBackjButton, SetUpReviewjButton, ViewClientjButton});

        SetUpReviewjButton1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queryButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_queryButtonActionPerformed
    {//GEN-HEADEREND:event_queryButtonActionPerformed
        // TODO add your handling code here:

        findwithFirstName(FNamejTextField.getText().trim());
        /*
         DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
         dtm.setRowCount(0);
         ClientController.getClientJpaController().findClient(
         FNamejTextField.getText());
         for (Iterator<Client> it = list.iterator(); it.hasNext();)
         {
         Client obcl = it.next();

         Object[] rowData =
         {
         obcl.getClientId(), obcl.getFirstName()
         };
         dtm.addRow(rowData);
         System.out.println(list);
         }
         */
//    ctrl.DBM.getClientJpaController().findClient(LNameTextField.getText());



    }//GEN-LAST:event_queryButtonActionPerformed
    public void findwithLastName(String name)
    {
        String str = "";

        if (LNameTextField.getText() != str)
        {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                    "slSystemPU");
            EntityManager em = emf.createEntityManager();

            em.getTransaction().begin();

            lastNameList = em.createQuery(
                    "SELECT c FROM Client c WHERE c.lastName LIKE :lastName").setParameter(
                    "lastName", LNameTextField.getText()).getResultList();

            if (lastNameList.size() > 0)
            {
                JOptionPane.showMessageDialog(null,
                        +lastNameList.size() + ": Customer is found");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Customer not found");
            }
            for (Object d : lastNameList)
            {
                Client loadClient = (Client) d;

                String lName = LNameTextField.getText();
                String lastN = loadClient.getLastName();
                if (lName.equalsIgnoreCase(lastN))
                {
                    displayTable(lastNameList);
                }
            }

            em.getTransaction().commit();
            em.close();
        }
    }

    private void findwithFirstName(String name)
    {

        String str = "";

        if (FNamejTextField.getText() != str)
        {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                    "slSystemPU");
            EntityManager em = emf.createEntityManager();

            em.getTransaction().begin();

            list = em.createQuery(
                    "SELECT c FROM Client c WHERE c.firstName LIKE :firstName")
                    .setParameter("firstName", FNamejTextField.getText()).getResultList();

            if (list.size() > 0)
            {
                JOptionPane.showMessageDialog(null,
                        +list.size() + ": Customer is found");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Customer not found");
            }


            for (Object c : list)
            {
                Client loadCl = (Client) c;
                String fname = FNamejTextField.getText().trim();
                String aName = loadCl.getFirstName();

                //   System.out.println(loadClient.getLastName());

                if (name.equalsIgnoreCase(fname))
                {
                    str = str + loadCl.getFirstName().toUpperCase() + "  " + loadCl.getLastName()
                            .toUpperCase() + "  ID: "  + loadCl.getClientId() + "\n";


                    jTextArea2.setText(str);

                    jLabel3.setText("Total Name found:  " + list.size());
                    displayTable(list);
                }
            }
            em.getTransaction().commit();
            em.close();
        }
    }

    public void displayTable(List resultList)
    {

        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();
        tableHeaders.add("Client Id");
        tableHeaders.add("First Name");
        tableHeaders.add("Last Name");
        //tableHeaders.add("Folder ID");

        for (Object o : resultList)
        {
            Client actor = (Client) o;
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(actor.getClientId());
            oneRow.add(actor.getFirstName());
            oneRow.add(actor.getLastName());
            //oneRow.add(actor.getClientFolderfolderid().getFolderId());

            tableData.add(oneRow);
        }
        TableModel model = new DefaultTableModel(tableData, tableHeaders);

        jTable1.setModel(model);
      }

    private void viewList()
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                "slSystemPU");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();

        list = em.createQuery(
                "SELECT c FROM Client c ").getResultList();

        if (list.size() > 0)
        {
            JOptionPane.showMessageDialog(null,
                    +list.size() + ": Customer is found");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Customer not found");
        }
        jLabel3.setText("Total Clients found: ".toUpperCase() + list.size());
        for (Iterator<Client> it = list.iterator(); it.hasNext();)
        {
            Client clt = it.next();
            displayTable(list);
        }


        em.getTransaction().commit();
        em.close();
    }

    private void ViewClientjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ViewClientjButtonActionPerformed
    {//GEN-HEADEREND:event_ViewClientjButtonActionPerformed
        // TODO add your handling code here:

        EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                "slSystemPU");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();

        list = em.createQuery(
                "SELECT c FROM Client c ").getResultList();


        for (Iterator<Client> it = list.iterator(); it.hasNext();)
        {
            Client clt = it.next();

            int id = Integer.parseInt(NojTextField.getText());

            int no = id;
            no++;
            NojTextField.setText(String.valueOf(no));
            int count = 0;
            count++;
            if (count > list.size())
            {

                JOptionPane.showMessageDialog(null,
                        "No more customer in the list \nThank you",
                        "Information",
                        JOptionPane.INFORMATION_MESSAGE);
            }

            try
            {
                findbyId(no);


            }
            catch (Exception e)
            {
                e.printStackTrace();
            }

            em.getTransaction().commit();
            em.close();

        }
       /*
         em.find(Client.class, name); //need to try this code
        
         if (emp != null) { // a client object should be checked for null first
         em.remove(emp);
         }*/
    }//GEN-LAST:event_ViewClientjButtonActionPerformed

    private void ClearFieldsjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ClearFieldsjButtonActionPerformed
    {//GEN-HEADEREND:event_ClearFieldsjButtonActionPerformed
        // TODO add your handling code here:
        FNamejTextField.setText("");
        LNameTextField.setText("");
        //   PostcodejTextField.setText("");
        jTextArea2.setText("");
        jLabel3.setText("");

    }//GEN-LAST:event_ClearFieldsjButtonActionPerformed

    private void ExitjMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ExitjMenuItemActionPerformed
    {//GEN-HEADEREND:event_ExitjMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitjMenuItemActionPerformed

    private void GoBackjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_GoBackjButtonActionPerformed
    {//GEN-HEADEREND:event_GoBackjButtonActionPerformed
        // TODO add your handling code here:
        MainWindowFrame frame = new MainWindowFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_GoBackjButtonActionPerformed

    private void ListViewButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ListViewButtonActionPerformed
    {//GEN-HEADEREND:event_ListViewButtonActionPerformed
        // TODO add your handling code here:
        viewList();
        
    }//GEN-LAST:event_ListViewButtonActionPerformed

    private void DeleteClientjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DeleteClientjButtonActionPerformed
    {//GEN-HEADEREND:event_DeleteClientjButtonActionPerformed


        try
        {
            int id = Integer.parseInt(IDjTextField.getText());
            ctrl.ClientController.getClientJpaController().destroy(id);
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(null,
                " The client with ID:  " + IDjTextField.getText()
                + " has been deleted successfully ");

        MainWindowFrame frame = new MainWindowFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_DeleteClientjButtonActionPerformed

    private void EditClientjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_EditClientjButtonActionPerformed
    {//GEN-HEADEREND:event_EditClientjButtonActionPerformed

        IDjTextField.setEditable(false);
        FirstNamejTextField.setEditable(true);
        LastNamejTextField.setEditable(true);
        StreetjTextField.setEditable(true);
        TownjTextField.setEditable(true);
        CityjTextField.setEditable(true);
        PostCodejTextField.setEditable(true);
        MobilejTextField.setEditable(true);
        HomeTeljTextField.setEditable(true);
        EmailjTextField.setEditable(true);
        FolderIDjTextField.setEditable(false);


        UpdatejButton.setEnabled(true);
        CanceljButton.setEnabled(true);

    }//GEN-LAST:event_EditClientjButtonActionPerformed
    private void findbyId(Integer id) throws NonexistentEntityException
    {
//     int idNo = Integer.parseInt(NojTextField.getText());

        EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                "slSystemPU");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();
        Client clientObj;
        try
        {
            clientObj = em.getReference(Client.class, id);
          //  clientObj.getClientId();


            if (id < 1)
            {
                JOptionPane.showMessageDialog(this,
                        "This is not a valid number ! \nNo client found");
            }
       }
        catch (EntityNotFoundException enfe)
        {
            throw new NonexistentEntityException(
                    "The client with id " + id + " no longer exists.",
                    enfe);
        }

   //     System.out.println(clientObj.getFirstName() + clientObj.getClientId());

        IDjTextField.setText(String.valueOf(clientObj.getClientId()));
        FirstNamejTextField.setText(clientObj.getFirstName());
        LastNamejTextField.setText(clientObj.getLastName());
        StreetjTextField.setText(clientObj.getStreet());
        TownjTextField.setText(clientObj.getTown());
        CityjTextField.setText(clientObj.getCity());
        PostCodejTextField.setText(clientObj.getPostCode());
        MobilejTextField.setText(clientObj.getMobile());
        HomeTeljTextField.setText(clientObj.getHomeTel());
        EmailjTextField.setText(clientObj.getEmail());
        FolderIDjTextField.setText(String.valueOf(clientObj.getClientId()));

        em.getTransaction().commit();
        em.close();
    }

    private void findjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_findjButtonActionPerformed
    {//GEN-HEADEREND:event_findjButtonActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(NojTextField.getText());
        //  id++;  
        try
        {
            findbyId(id);
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }


//        System.out.println(list.size());

    }//GEN-LAST:event_findjButtonActionPerformed

    private void NojTextField_focusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_NojTextField_focusLost
    {//GEN-HEADEREND:event_NojTextField_focusLost
        // TODO add your handling code here:
        try
        { // when focus lost & cant read anything
            int id = Integer.parseInt(NojTextField.getText());
        }
        catch (NumberFormatException exc)
        {
            JOptionPane.showMessageDialog(null,
                    "No number found!!!!! \nMust enter a number for Client number",
                    "Input Error", JOptionPane.ERROR_MESSAGE);
            NojTextField.isFocusable();
            NojTextField.setText("");

        }

    }//GEN-LAST:event_NojTextField_focusLost

    private void UpdatejButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_UpdatejButtonActionPerformed
    {//GEN-HEADEREND:event_UpdatejButtonActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory(
                "slSystemPU");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();
        //      Client client=null;
        int id = Integer.parseInt(NojTextField.getText());
        Client persistentClient = em.find(Client.class, id);



        IDjTextField.setText(String.valueOf(persistentClient.getClientId()));
        persistentClient.setFirstName(FirstNamejTextField.getText());
        persistentClient.setLastName(LastNamejTextField.getText());
        persistentClient.setStreet(StreetjTextField.getText());
        persistentClient.setTown(TownjTextField.getText());
        persistentClient.setCity(CityjTextField.getText());
        persistentClient.setPostCode(PostCodejTextField.getText());
        persistentClient.setMobile(MobilejTextField.getText());
        persistentClient.setHomeTel(HomeTeljTextField.getText());
        persistentClient.setEmail(EmailjTextField.getText());
        FolderIDjTextField.setText(String.valueOf(
                persistentClient.getClientId()));

        em.merge(persistentClient);
        em.getTransaction().commit();

        System.out.println(
                persistentClient.getFirstName() + persistentClient.getEmail());
        JOptionPane.showMessageDialog(null,
                " The client: " + persistentClient.getFirstName().toUpperCase() + "'s" + " details are updated successfully ");
        em.close();

        MainWindowFrame frame = new MainWindowFrame();
        frame.setVisible(true);
        dispose();

    }//GEN-LAST:event_UpdatejButtonActionPerformed

    private void CanceljButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CanceljButtonActionPerformed
    {//GEN-HEADEREND:event_CanceljButtonActionPerformed
        // TODO add your handling code here:
        MainWindowFrame frame = new MainWindowFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_CanceljButtonActionPerformed

    private void SetUpReviewjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SetUpReviewjButtonActionPerformed
    {//GEN-HEADEREND:event_SetUpReviewjButtonActionPerformed
        // TODO add your handling code here:#
        setUpReminderFrame frame = new setUpReminderFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_SetUpReviewjButtonActionPerformed

    private void PrintjButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PrintjButtonActionPerformed
    {//GEN-HEADEREND:event_PrintjButtonActionPerformed
        // TODO add your handling code here:
          int id = Integer.parseInt(NojTextField.getText());
        //  id++;  
        try
        {
            findbyId(id);
            PrintJob.class.cast(clientObj); // this line only prints same as sout.
               
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_PrintjButtonActionPerformed

    private void SetUpReviewjButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SetUpReviewjButton1ActionPerformed
    {//GEN-HEADEREND:event_SetUpReviewjButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SetUpReviewjButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(SearchClientForm.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SearchClientForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CanceljButton;
    private javax.swing.JLabel CityjLabel;
    private javax.swing.JTextField CityjTextField;
    private javax.swing.JButton ClearFieldsjButton;
    private javax.swing.JButton DeleteClientjButton;
    private javax.swing.JButton EditClientjButton;
    private javax.swing.JLabel EmailjLabel;
    private javax.swing.JTextField EmailjTextField;
    private javax.swing.JMenuItem ExitjMenuItem;
    private javax.swing.JLabel FNameLebel;
    private javax.swing.JTextField FNamejTextField;
    private javax.swing.JLabel FirstNamejLabel;
    private javax.swing.JTextField FirstNamejTextField;
    private javax.swing.JLabel FloderjLabel;
    private javax.swing.JTextField FolderIDjTextField;
    private javax.swing.JButton GoBackjButton;
    private javax.swing.JLabel HomeTeljLabel;
    private javax.swing.JTextField HomeTeljTextField;
    private javax.swing.JTextField IDjTextField;
    private javax.swing.JLabel LNameLabel;
    private javax.swing.JTextField LNameTextField;
    private javax.swing.JLabel LastNamejLabel;
    private javax.swing.JTextField LastNamejTextField;
    private javax.swing.JButton ListViewButton;
    private javax.swing.JLabel MobilejLabel;
    private javax.swing.JTextField MobilejTextField;
    private javax.swing.JTextField NojTextField;
    private javax.swing.JLabel PostCodejLabel;
    private javax.swing.JTextField PostCodejTextField;
    private javax.swing.JButton PrintjButton;
    private javax.swing.JButton SetUpReviewjButton;
    private javax.swing.JButton SetUpReviewjButton1;
    private javax.swing.JLabel StreetjLabel;
    private javax.swing.JTextField StreetjTextField;
    private javax.swing.JLabel TownjLabel;
    private javax.swing.JTextField TownjTextField;
    private javax.swing.JTextField TownjTextField1;
    private javax.swing.JButton UpdatejButton;
    private javax.swing.JButton ViewClientjButton;
    private javax.swing.JButton findjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton queryButton;
    // End of variables declaration//GEN-END:variables
}
